2025-10-02 11:36:23,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-02 11:36:23,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-02 11:36:23,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-02 11:36:23,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-10-02 11:36:25,535:INFO:PyCaret ClassificationExperiment
2025-10-02 11:36:25,535:INFO:Logging name: clf-default-name
2025-10-02 11:36:25,535:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-10-02 11:36:25,535:INFO:version 3.3.2
2025-10-02 11:36:25,535:INFO:Initializing setup()
2025-10-02 11:36:25,535:INFO:self.USI: 28db
2025-10-02 11:36:25,535:INFO:self._variable_keys: {'pipeline', 'X_test', 'y_train', 'gpu_n_jobs_param', 'html_param', 'n_jobs_param', '_available_plots', 'X', 'logging_param', 'exp_id', 'exp_name_log', 'y', 'log_plots_param', 'idx', '_ml_usecase', 'gpu_param', 'fold_shuffle_param', 'is_multiclass', 'data', 'fold_groups_param', 'y_test', 'X_train', 'fold_generator', 'memory', 'USI', 'fix_imbalance', 'target_param', 'seed'}
2025-10-02 11:36:25,535:INFO:Checking environment
2025-10-02 11:36:25,535:INFO:python_version: 3.10.18
2025-10-02 11:36:25,535:INFO:python_build: ('main', 'Jun  5 2025 13:08:55')
2025-10-02 11:36:25,535:INFO:machine: AMD64
2025-10-02 11:36:25,535:INFO:platform: Windows-10-10.0.26100-SP0
2025-10-02 11:36:25,537:INFO:Memory: svmem(total=16805040128, available=2428997632, percent=85.5, used=14376042496, free=2428997632)
2025-10-02 11:36:25,537:INFO:Physical Core: 4
2025-10-02 11:36:25,537:INFO:Logical Core: 8
2025-10-02 11:36:25,537:INFO:Checking libraries
2025-10-02 11:36:25,537:INFO:System:
2025-10-02 11:36:25,537:INFO:    python: 3.10.18 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:08:55) [MSC v.1929 64 bit (AMD64)]
2025-10-02 11:36:25,537:INFO:executable: C:\Users\pforg\anaconda3\envs\new_env\python.exe
2025-10-02 11:36:25,537:INFO:   machine: Windows-10-10.0.26100-SP0
2025-10-02 11:36:25,537:INFO:PyCaret required dependencies:
2025-10-02 11:36:25,584:INFO:                 pip: 25.2
2025-10-02 11:36:25,584:INFO:          setuptools: 78.1.1
2025-10-02 11:36:25,584:INFO:             pycaret: 3.3.2
2025-10-02 11:36:25,584:INFO:             IPython: 8.37.0
2025-10-02 11:36:25,584:INFO:          ipywidgets: 8.1.7
2025-10-02 11:36:25,584:INFO:                tqdm: 4.67.1
2025-10-02 11:36:25,584:INFO:               numpy: 1.26.4
2025-10-02 11:36:25,584:INFO:              pandas: 2.1.4
2025-10-02 11:36:25,584:INFO:              jinja2: 3.1.6
2025-10-02 11:36:25,584:INFO:               scipy: 1.11.4
2025-10-02 11:36:25,584:INFO:              joblib: 1.3.2
2025-10-02 11:36:25,584:INFO:             sklearn: 1.4.2
2025-10-02 11:36:25,584:INFO:                pyod: 2.0.5
2025-10-02 11:36:25,584:INFO:            imblearn: 0.14.0
2025-10-02 11:36:25,584:INFO:   category_encoders: 2.7.0
2025-10-02 11:36:25,586:INFO:            lightgbm: 4.6.0
2025-10-02 11:36:25,586:INFO:               numba: 0.62.1
2025-10-02 11:36:25,586:INFO:            requests: 2.32.5
2025-10-02 11:36:25,586:INFO:          matplotlib: 3.7.5
2025-10-02 11:36:25,586:INFO:          scikitplot: 0.3.7
2025-10-02 11:36:25,586:INFO:         yellowbrick: 1.5
2025-10-02 11:36:25,586:INFO:              plotly: 6.3.0
2025-10-02 11:36:25,586:INFO:    plotly-resampler: Not installed
2025-10-02 11:36:25,586:INFO:             kaleido: 1.1.0
2025-10-02 11:36:25,586:INFO:           schemdraw: 0.15
2025-10-02 11:36:25,586:INFO:         statsmodels: 0.14.5
2025-10-02 11:36:25,586:INFO:              sktime: 0.26.0
2025-10-02 11:36:25,586:INFO:               tbats: 1.1.3
2025-10-02 11:36:25,586:INFO:            pmdarima: 2.0.4
2025-10-02 11:36:25,586:INFO:              psutil: 7.1.0
2025-10-02 11:36:25,586:INFO:          markupsafe: 3.0.3
2025-10-02 11:36:25,586:INFO:             pickle5: Not installed
2025-10-02 11:36:25,586:INFO:         cloudpickle: 3.1.1
2025-10-02 11:36:25,586:INFO:         deprecation: 2.1.0
2025-10-02 11:36:25,586:INFO:              xxhash: 3.5.0
2025-10-02 11:36:25,586:INFO:           wurlitzer: Not installed
2025-10-02 11:36:25,586:INFO:PyCaret optional dependencies:
2025-10-02 11:36:25,605:INFO:                shap: Not installed
2025-10-02 11:36:25,605:INFO:           interpret: Not installed
2025-10-02 11:36:25,605:INFO:                umap: Not installed
2025-10-02 11:36:25,605:INFO:     ydata_profiling: Not installed
2025-10-02 11:36:25,605:INFO:  explainerdashboard: Not installed
2025-10-02 11:36:25,605:INFO:             autoviz: Not installed
2025-10-02 11:36:25,605:INFO:           fairlearn: Not installed
2025-10-02 11:36:25,605:INFO:          deepchecks: Not installed
2025-10-02 11:36:25,605:INFO:             xgboost: Not installed
2025-10-02 11:36:25,605:INFO:            catboost: Not installed
2025-10-02 11:36:25,605:INFO:              kmodes: Not installed
2025-10-02 11:36:25,605:INFO:             mlxtend: Not installed
2025-10-02 11:36:25,605:INFO:       statsforecast: Not installed
2025-10-02 11:36:25,605:INFO:        tune_sklearn: Not installed
2025-10-02 11:36:25,605:INFO:                 ray: Not installed
2025-10-02 11:36:25,605:INFO:            hyperopt: Not installed
2025-10-02 11:36:25,605:INFO:              optuna: Not installed
2025-10-02 11:36:25,607:INFO:               skopt: Not installed
2025-10-02 11:36:25,607:INFO:              mlflow: Not installed
2025-10-02 11:36:25,607:INFO:              gradio: Not installed
2025-10-02 11:36:25,607:INFO:             fastapi: Not installed
2025-10-02 11:36:25,607:INFO:             uvicorn: Not installed
2025-10-02 11:36:25,607:INFO:              m2cgen: Not installed
2025-10-02 11:36:25,607:INFO:           evidently: Not installed
2025-10-02 11:36:25,607:INFO:               fugue: Not installed
2025-10-02 11:36:25,607:INFO:           streamlit: Not installed
2025-10-02 11:36:25,607:INFO:             prophet: Not installed
2025-10-02 11:36:25,607:INFO:None
2025-10-02 11:36:25,607:INFO:Set up data.
2025-10-02 11:36:25,617:INFO:Set up folding strategy.
2025-10-02 11:36:25,617:INFO:Set up train/test split.
2025-10-02 11:36:25,629:INFO:Set up index.
2025-10-02 11:36:25,630:INFO:Assigning column types.
2025-10-02 11:36:25,636:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-10-02 11:36:25,683:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-02 11:36:25,687:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-02 11:36:25,721:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-02 11:36:25,721:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-02 11:36:25,770:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-10-02 11:36:25,770:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-02 11:36:25,797:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-02 11:36:25,797:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-02 11:36:25,800:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-10-02 11:36:25,854:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-02 11:36:25,882:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-02 11:36:25,882:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-02 11:36:25,931:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-10-02 11:36:25,982:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-02 11:36:25,982:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-02 11:36:25,982:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-10-02 11:36:26,062:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-02 11:36:26,062:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-02 11:36:26,123:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-02 11:36:26,123:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-02 11:36:26,126:INFO:Preparing preprocessing pipeline...
2025-10-02 11:36:26,128:INFO:Set up simple imputation.
2025-10-02 11:36:26,169:INFO:Finished creating preprocessing pipeline.
2025-10-02 11:36:26,177:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\pforg\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'AutoPay', 'monthly_to_total',
                                             'tenure_to_total'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-10-02 11:36:26,177:INFO:Creating final display dataframe.
2025-10-02 11:36:26,244:INFO:Setup _display_container:                     Description             Value
0                    Session id              7144
1                        Target             Churn
2                   Target type            Binary
3           Original data shape        (7043, 10)
4        Transformed data shape        (7043, 10)
5   Transformed train set shape        (4930, 10)
6    Transformed test set shape        (2113, 10)
7              Numeric features                 9
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              28db
2025-10-02 11:36:26,349:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-02 11:36:26,349:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-02 11:36:26,410:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-02 11:36:26,410:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-10-02 11:36:26,410:INFO:setup() successfully completed in 0.88s...............
2025-10-02 11:36:26,433:INFO:Initializing compare_models()
2025-10-02 11:36:26,433:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9CAD77CD0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E9CAD77CD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-10-02 11:36:26,433:INFO:Checking exceptions
2025-10-02 11:36:26,449:INFO:Preparing display monitor
2025-10-02 11:36:26,513:INFO:Initializing Logistic Regression
2025-10-02 11:36:26,513:INFO:Total runtime is 0.0 minutes
2025-10-02 11:36:26,524:INFO:SubProcess create_model() called ==================================
2025-10-02 11:36:26,526:INFO:Initializing create_model()
2025-10-02 11:36:26,526:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9CAD77CD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E9F047F4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-02 11:36:26,526:INFO:Checking exceptions
2025-10-02 11:36:26,526:INFO:Importing libraries
2025-10-02 11:36:26,526:INFO:Copying training dataset
2025-10-02 11:36:26,532:INFO:Defining folds
2025-10-02 11:36:26,532:INFO:Declaring metric variables
2025-10-02 11:36:26,546:INFO:Importing untrained model
2025-10-02 11:36:26,550:INFO:Logistic Regression Imported successfully
2025-10-02 11:36:26,567:INFO:Starting cross validation
2025-10-02 11:36:26,567:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-02 11:36:32,561:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-10-02 11:36:32,863:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-10-02 11:36:32,974:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-10-02 11:36:32,993:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-10-02 11:36:33,055:INFO:Calculating mean and std
2025-10-02 11:36:33,058:INFO:Creating metrics dataframe
2025-10-02 11:36:33,059:INFO:Uploading results into container
2025-10-02 11:36:33,061:INFO:Uploading model into container now
2025-10-02 11:36:33,061:INFO:_master_model_container: 1
2025-10-02 11:36:33,061:INFO:_display_container: 2
2025-10-02 11:36:33,061:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7144, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-10-02 11:36:33,061:INFO:create_model() successfully completed......................................
2025-10-02 11:36:33,146:INFO:SubProcess create_model() end ==================================
2025-10-02 11:36:33,146:INFO:Creating metrics dataframe
2025-10-02 11:36:33,162:INFO:Initializing K Neighbors Classifier
2025-10-02 11:36:33,162:INFO:Total runtime is 0.11081051826477051 minutes
2025-10-02 11:36:33,162:INFO:SubProcess create_model() called ==================================
2025-10-02 11:36:33,162:INFO:Initializing create_model()
2025-10-02 11:36:33,162:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9CAD77CD0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E9F047F4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-02 11:36:33,162:INFO:Checking exceptions
2025-10-02 11:36:33,167:INFO:Importing libraries
2025-10-02 11:36:33,167:INFO:Copying training dataset
2025-10-02 11:36:33,181:INFO:Defining folds
2025-10-02 11:36:33,181:INFO:Declaring metric variables
2025-10-02 11:36:33,187:INFO:Importing untrained model
2025-10-02 11:36:33,196:INFO:K Neighbors Classifier Imported successfully
2025-10-02 11:36:33,212:INFO:Starting cross validation
2025-10-02 11:36:33,214:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-02 11:36:33,555:INFO:Calculating mean and std
2025-10-02 11:36:33,557:INFO:Creating metrics dataframe
2025-10-02 11:36:33,558:INFO:Uploading results into container
2025-10-02 11:36:33,558:INFO:Uploading model into container now
2025-10-02 11:36:33,558:INFO:_master_model_container: 2
2025-10-02 11:36:33,558:INFO:_display_container: 2
2025-10-02 11:36:33,558:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-10-02 11:36:33,558:INFO:create_model() successfully completed......................................
2025-10-02 11:36:33,641:INFO:SubProcess create_model() end ==================================
2025-10-02 11:36:33,641:INFO:Creating metrics dataframe
2025-10-02 11:36:33,648:INFO:Initializing Naive Bayes
2025-10-02 11:36:33,648:INFO:Total runtime is 0.11890223026275634 minutes
2025-10-02 11:36:33,653:INFO:SubProcess create_model() called ==================================
2025-10-02 11:36:33,653:INFO:Initializing create_model()
2025-10-02 11:36:33,653:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9CAD77CD0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E9F047F4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-02 11:36:33,655:INFO:Checking exceptions
2025-10-02 11:36:33,655:INFO:Importing libraries
2025-10-02 11:36:33,656:INFO:Copying training dataset
2025-10-02 11:36:33,658:INFO:Defining folds
2025-10-02 11:36:33,658:INFO:Declaring metric variables
2025-10-02 11:36:33,663:INFO:Importing untrained model
2025-10-02 11:36:33,667:INFO:Naive Bayes Imported successfully
2025-10-02 11:36:33,676:INFO:Starting cross validation
2025-10-02 11:36:33,676:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-02 11:36:33,788:INFO:Calculating mean and std
2025-10-02 11:36:33,788:INFO:Creating metrics dataframe
2025-10-02 11:36:33,791:INFO:Uploading results into container
2025-10-02 11:36:33,793:INFO:Uploading model into container now
2025-10-02 11:36:33,793:INFO:_master_model_container: 3
2025-10-02 11:36:33,793:INFO:_display_container: 2
2025-10-02 11:36:33,793:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-10-02 11:36:33,793:INFO:create_model() successfully completed......................................
2025-10-02 11:36:33,878:INFO:SubProcess create_model() end ==================================
2025-10-02 11:36:33,878:INFO:Creating metrics dataframe
2025-10-02 11:36:33,888:INFO:Initializing Decision Tree Classifier
2025-10-02 11:36:33,888:INFO:Total runtime is 0.12291115919748942 minutes
2025-10-02 11:36:33,892:INFO:SubProcess create_model() called ==================================
2025-10-02 11:36:33,894:INFO:Initializing create_model()
2025-10-02 11:36:33,894:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9CAD77CD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E9F047F4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-02 11:36:33,894:INFO:Checking exceptions
2025-10-02 11:36:33,894:INFO:Importing libraries
2025-10-02 11:36:33,894:INFO:Copying training dataset
2025-10-02 11:36:33,900:INFO:Defining folds
2025-10-02 11:36:33,900:INFO:Declaring metric variables
2025-10-02 11:36:33,900:INFO:Importing untrained model
2025-10-02 11:36:33,908:INFO:Decision Tree Classifier Imported successfully
2025-10-02 11:36:33,916:INFO:Starting cross validation
2025-10-02 11:36:33,916:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-02 11:36:34,104:INFO:Calculating mean and std
2025-10-02 11:36:34,107:INFO:Creating metrics dataframe
2025-10-02 11:36:34,108:INFO:Uploading results into container
2025-10-02 11:36:34,110:INFO:Uploading model into container now
2025-10-02 11:36:34,110:INFO:_master_model_container: 4
2025-10-02 11:36:34,110:INFO:_display_container: 2
2025-10-02 11:36:34,111:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7144, splitter='best')
2025-10-02 11:36:34,111:INFO:create_model() successfully completed......................................
2025-10-02 11:36:34,203:INFO:SubProcess create_model() end ==================================
2025-10-02 11:36:34,203:INFO:Creating metrics dataframe
2025-10-02 11:36:34,211:INFO:Initializing SVM - Linear Kernel
2025-10-02 11:36:34,214:INFO:Total runtime is 0.128344722588857 minutes
2025-10-02 11:36:34,217:INFO:SubProcess create_model() called ==================================
2025-10-02 11:36:34,217:INFO:Initializing create_model()
2025-10-02 11:36:34,217:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9CAD77CD0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E9F047F4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-02 11:36:34,219:INFO:Checking exceptions
2025-10-02 11:36:34,219:INFO:Importing libraries
2025-10-02 11:36:34,219:INFO:Copying training dataset
2025-10-02 11:36:34,226:INFO:Defining folds
2025-10-02 11:36:34,228:INFO:Declaring metric variables
2025-10-02 11:36:34,228:INFO:Importing untrained model
2025-10-02 11:36:34,237:INFO:SVM - Linear Kernel Imported successfully
2025-10-02 11:36:34,247:INFO:Starting cross validation
2025-10-02 11:36:34,250:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-02 11:36:34,453:INFO:Calculating mean and std
2025-10-02 11:36:34,456:INFO:Creating metrics dataframe
2025-10-02 11:36:34,457:INFO:Uploading results into container
2025-10-02 11:36:34,457:INFO:Uploading model into container now
2025-10-02 11:36:34,457:INFO:_master_model_container: 5
2025-10-02 11:36:34,457:INFO:_display_container: 2
2025-10-02 11:36:34,460:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7144, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-10-02 11:36:34,460:INFO:create_model() successfully completed......................................
2025-10-02 11:36:34,538:INFO:SubProcess create_model() end ==================================
2025-10-02 11:36:34,540:INFO:Creating metrics dataframe
2025-10-02 11:36:34,546:INFO:Initializing Ridge Classifier
2025-10-02 11:36:34,548:INFO:Total runtime is 0.13391109704971313 minutes
2025-10-02 11:36:34,550:INFO:SubProcess create_model() called ==================================
2025-10-02 11:36:34,550:INFO:Initializing create_model()
2025-10-02 11:36:34,550:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9CAD77CD0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E9F047F4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-02 11:36:34,552:INFO:Checking exceptions
2025-10-02 11:36:34,552:INFO:Importing libraries
2025-10-02 11:36:34,552:INFO:Copying training dataset
2025-10-02 11:36:34,553:INFO:Defining folds
2025-10-02 11:36:34,553:INFO:Declaring metric variables
2025-10-02 11:36:34,560:INFO:Importing untrained model
2025-10-02 11:36:34,560:INFO:Ridge Classifier Imported successfully
2025-10-02 11:36:34,570:INFO:Starting cross validation
2025-10-02 11:36:34,570:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-02 11:36:34,612:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.96532e-11): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-10-02 11:36:34,612:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.98508e-11): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-10-02 11:36:34,612:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.93386e-11): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-10-02 11:36:34,614:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.94224e-11): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-10-02 11:36:34,619:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.87735e-11): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-10-02 11:36:34,622:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.94281e-11): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-10-02 11:36:34,627:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.94911e-11): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-10-02 11:36:34,644:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.99616e-11): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-10-02 11:36:34,657:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.98007e-11): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-10-02 11:36:34,659:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\linear_model\_ridge.py:204: LinAlgWarning: Ill-conditioned matrix (rcond=4.91644e-11): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2025-10-02 11:36:34,686:INFO:Calculating mean and std
2025-10-02 11:36:34,686:INFO:Creating metrics dataframe
2025-10-02 11:36:34,687:INFO:Uploading results into container
2025-10-02 11:36:34,690:INFO:Uploading model into container now
2025-10-02 11:36:34,690:INFO:_master_model_container: 6
2025-10-02 11:36:34,690:INFO:_display_container: 2
2025-10-02 11:36:34,690:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7144, solver='auto',
                tol=0.0001)
2025-10-02 11:36:34,690:INFO:create_model() successfully completed......................................
2025-10-02 11:36:34,780:INFO:SubProcess create_model() end ==================================
2025-10-02 11:36:34,780:INFO:Creating metrics dataframe
2025-10-02 11:36:34,791:INFO:Initializing Random Forest Classifier
2025-10-02 11:36:34,791:INFO:Total runtime is 0.13796604871749876 minutes
2025-10-02 11:36:34,795:INFO:SubProcess create_model() called ==================================
2025-10-02 11:36:34,795:INFO:Initializing create_model()
2025-10-02 11:36:34,797:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9CAD77CD0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E9F047F4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-02 11:36:34,797:INFO:Checking exceptions
2025-10-02 11:36:34,797:INFO:Importing libraries
2025-10-02 11:36:34,797:INFO:Copying training dataset
2025-10-02 11:36:34,804:INFO:Defining folds
2025-10-02 11:36:34,806:INFO:Declaring metric variables
2025-10-02 11:36:34,807:INFO:Importing untrained model
2025-10-02 11:36:34,811:INFO:Random Forest Classifier Imported successfully
2025-10-02 11:36:34,821:INFO:Starting cross validation
2025-10-02 11:36:34,822:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-02 11:36:36,962:INFO:Calculating mean and std
2025-10-02 11:36:36,964:INFO:Creating metrics dataframe
2025-10-02 11:36:36,968:INFO:Uploading results into container
2025-10-02 11:36:36,970:INFO:Uploading model into container now
2025-10-02 11:36:36,971:INFO:_master_model_container: 7
2025-10-02 11:36:36,971:INFO:_display_container: 2
2025-10-02 11:36:36,972:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=7144, verbose=0,
                       warm_start=False)
2025-10-02 11:36:36,972:INFO:create_model() successfully completed......................................
2025-10-02 11:36:37,076:INFO:SubProcess create_model() end ==================================
2025-10-02 11:36:37,076:INFO:Creating metrics dataframe
2025-10-02 11:36:37,091:INFO:Initializing Quadratic Discriminant Analysis
2025-10-02 11:36:37,091:INFO:Total runtime is 0.17628945112228392 minutes
2025-10-02 11:36:37,096:INFO:SubProcess create_model() called ==================================
2025-10-02 11:36:37,098:INFO:Initializing create_model()
2025-10-02 11:36:37,098:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9CAD77CD0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E9F047F4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-02 11:36:37,098:INFO:Checking exceptions
2025-10-02 11:36:37,098:INFO:Importing libraries
2025-10-02 11:36:37,098:INFO:Copying training dataset
2025-10-02 11:36:37,107:INFO:Defining folds
2025-10-02 11:36:37,107:INFO:Declaring metric variables
2025-10-02 11:36:37,113:INFO:Importing untrained model
2025-10-02 11:36:37,119:INFO:Quadratic Discriminant Analysis Imported successfully
2025-10-02 11:36:37,132:INFO:Starting cross validation
2025-10-02 11:36:37,134:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-02 11:36:37,255:INFO:Calculating mean and std
2025-10-02 11:36:37,255:INFO:Creating metrics dataframe
2025-10-02 11:36:37,258:INFO:Uploading results into container
2025-10-02 11:36:37,258:INFO:Uploading model into container now
2025-10-02 11:36:37,261:INFO:_master_model_container: 8
2025-10-02 11:36:37,261:INFO:_display_container: 2
2025-10-02 11:36:37,261:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-10-02 11:36:37,261:INFO:create_model() successfully completed......................................
2025-10-02 11:36:37,338:INFO:SubProcess create_model() end ==================================
2025-10-02 11:36:37,338:INFO:Creating metrics dataframe
2025-10-02 11:36:37,352:INFO:Initializing Ada Boost Classifier
2025-10-02 11:36:37,352:INFO:Total runtime is 0.18063977956771848 minutes
2025-10-02 11:36:37,358:INFO:SubProcess create_model() called ==================================
2025-10-02 11:36:37,358:INFO:Initializing create_model()
2025-10-02 11:36:37,358:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9CAD77CD0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E9F047F4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-02 11:36:37,358:INFO:Checking exceptions
2025-10-02 11:36:37,358:INFO:Importing libraries
2025-10-02 11:36:37,358:INFO:Copying training dataset
2025-10-02 11:36:37,363:INFO:Defining folds
2025-10-02 11:36:37,363:INFO:Declaring metric variables
2025-10-02 11:36:37,363:INFO:Importing untrained model
2025-10-02 11:36:37,372:INFO:Ada Boost Classifier Imported successfully
2025-10-02 11:36:37,382:INFO:Starting cross validation
2025-10-02 11:36:37,384:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-02 11:36:37,410:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-10-02 11:36:37,410:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-10-02 11:36:37,414:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-10-02 11:36:37,414:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-10-02 11:36:37,416:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-10-02 11:36:37,418:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-10-02 11:36:37,436:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-10-02 11:36:37,449:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-10-02 11:36:37,842:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-10-02 11:36:37,848:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-10-02 11:36:38,233:INFO:Calculating mean and std
2025-10-02 11:36:38,233:INFO:Creating metrics dataframe
2025-10-02 11:36:38,233:INFO:Uploading results into container
2025-10-02 11:36:38,233:INFO:Uploading model into container now
2025-10-02 11:36:38,238:INFO:_master_model_container: 9
2025-10-02 11:36:38,238:INFO:_display_container: 2
2025-10-02 11:36:38,238:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7144)
2025-10-02 11:36:38,238:INFO:create_model() successfully completed......................................
2025-10-02 11:36:38,356:INFO:SubProcess create_model() end ==================================
2025-10-02 11:36:38,356:INFO:Creating metrics dataframe
2025-10-02 11:36:38,389:INFO:Initializing Gradient Boosting Classifier
2025-10-02 11:36:38,389:INFO:Total runtime is 0.19792275031407672 minutes
2025-10-02 11:36:38,403:INFO:SubProcess create_model() called ==================================
2025-10-02 11:36:38,403:INFO:Initializing create_model()
2025-10-02 11:36:38,403:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9CAD77CD0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E9F047F4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-02 11:36:38,403:INFO:Checking exceptions
2025-10-02 11:36:38,405:INFO:Importing libraries
2025-10-02 11:36:38,405:INFO:Copying training dataset
2025-10-02 11:36:38,425:INFO:Defining folds
2025-10-02 11:36:38,425:INFO:Declaring metric variables
2025-10-02 11:36:38,453:INFO:Importing untrained model
2025-10-02 11:36:38,497:INFO:Gradient Boosting Classifier Imported successfully
2025-10-02 11:36:38,515:INFO:Starting cross validation
2025-10-02 11:36:38,515:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-02 11:36:40,867:INFO:Calculating mean and std
2025-10-02 11:36:40,869:INFO:Creating metrics dataframe
2025-10-02 11:36:40,872:INFO:Uploading results into container
2025-10-02 11:36:40,872:INFO:Uploading model into container now
2025-10-02 11:36:40,872:INFO:_master_model_container: 10
2025-10-02 11:36:40,872:INFO:_display_container: 2
2025-10-02 11:36:40,874:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7144, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-10-02 11:36:40,874:INFO:create_model() successfully completed......................................
2025-10-02 11:36:40,966:INFO:SubProcess create_model() end ==================================
2025-10-02 11:36:40,966:INFO:Creating metrics dataframe
2025-10-02 11:36:40,997:INFO:Initializing Linear Discriminant Analysis
2025-10-02 11:36:40,997:INFO:Total runtime is 0.2413917779922485 minutes
2025-10-02 11:36:41,005:INFO:SubProcess create_model() called ==================================
2025-10-02 11:36:41,005:INFO:Initializing create_model()
2025-10-02 11:36:41,005:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9CAD77CD0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E9F047F4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-02 11:36:41,005:INFO:Checking exceptions
2025-10-02 11:36:41,007:INFO:Importing libraries
2025-10-02 11:36:41,007:INFO:Copying training dataset
2025-10-02 11:36:41,017:INFO:Defining folds
2025-10-02 11:36:41,019:INFO:Declaring metric variables
2025-10-02 11:36:41,027:INFO:Importing untrained model
2025-10-02 11:36:41,035:INFO:Linear Discriminant Analysis Imported successfully
2025-10-02 11:36:41,043:INFO:Starting cross validation
2025-10-02 11:36:41,044:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-02 11:36:41,151:INFO:Calculating mean and std
2025-10-02 11:36:41,153:INFO:Creating metrics dataframe
2025-10-02 11:36:41,155:INFO:Uploading results into container
2025-10-02 11:36:41,155:INFO:Uploading model into container now
2025-10-02 11:36:41,155:INFO:_master_model_container: 11
2025-10-02 11:36:41,155:INFO:_display_container: 2
2025-10-02 11:36:41,155:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-10-02 11:36:41,155:INFO:create_model() successfully completed......................................
2025-10-02 11:36:41,226:INFO:SubProcess create_model() end ==================================
2025-10-02 11:36:41,226:INFO:Creating metrics dataframe
2025-10-02 11:36:41,236:INFO:Initializing Extra Trees Classifier
2025-10-02 11:36:41,236:INFO:Total runtime is 0.2453767657279968 minutes
2025-10-02 11:36:41,238:INFO:SubProcess create_model() called ==================================
2025-10-02 11:36:41,241:INFO:Initializing create_model()
2025-10-02 11:36:41,241:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9CAD77CD0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E9F047F4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-02 11:36:41,241:INFO:Checking exceptions
2025-10-02 11:36:41,241:INFO:Importing libraries
2025-10-02 11:36:41,241:INFO:Copying training dataset
2025-10-02 11:36:41,242:INFO:Defining folds
2025-10-02 11:36:41,242:INFO:Declaring metric variables
2025-10-02 11:36:41,249:INFO:Importing untrained model
2025-10-02 11:36:41,254:INFO:Extra Trees Classifier Imported successfully
2025-10-02 11:36:41,261:INFO:Starting cross validation
2025-10-02 11:36:41,266:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-02 11:36:42,542:INFO:Calculating mean and std
2025-10-02 11:36:42,542:INFO:Creating metrics dataframe
2025-10-02 11:36:42,542:INFO:Uploading results into container
2025-10-02 11:36:42,542:INFO:Uploading model into container now
2025-10-02 11:36:42,548:INFO:_master_model_container: 12
2025-10-02 11:36:42,548:INFO:_display_container: 2
2025-10-02 11:36:42,548:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7144, verbose=0,
                     warm_start=False)
2025-10-02 11:36:42,548:INFO:create_model() successfully completed......................................
2025-10-02 11:36:42,623:INFO:SubProcess create_model() end ==================================
2025-10-02 11:36:42,623:INFO:Creating metrics dataframe
2025-10-02 11:36:42,637:INFO:Initializing Light Gradient Boosting Machine
2025-10-02 11:36:42,637:INFO:Total runtime is 0.26872111161549883 minutes
2025-10-02 11:36:42,640:INFO:SubProcess create_model() called ==================================
2025-10-02 11:36:42,640:INFO:Initializing create_model()
2025-10-02 11:36:42,640:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9CAD77CD0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E9F047F4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-02 11:36:42,640:INFO:Checking exceptions
2025-10-02 11:36:42,640:INFO:Importing libraries
2025-10-02 11:36:42,640:INFO:Copying training dataset
2025-10-02 11:36:42,648:INFO:Defining folds
2025-10-02 11:36:42,648:INFO:Declaring metric variables
2025-10-02 11:36:42,651:INFO:Importing untrained model
2025-10-02 11:36:42,656:INFO:Light Gradient Boosting Machine Imported successfully
2025-10-02 11:36:42,669:INFO:Starting cross validation
2025-10-02 11:36:42,671:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-02 11:36:43,861:INFO:Calculating mean and std
2025-10-02 11:36:43,861:INFO:Creating metrics dataframe
2025-10-02 11:36:43,865:INFO:Uploading results into container
2025-10-02 11:36:43,865:INFO:Uploading model into container now
2025-10-02 11:36:43,867:INFO:_master_model_container: 13
2025-10-02 11:36:43,867:INFO:_display_container: 2
2025-10-02 11:36:43,868:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7144, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-10-02 11:36:43,868:INFO:create_model() successfully completed......................................
2025-10-02 11:36:43,962:INFO:SubProcess create_model() end ==================================
2025-10-02 11:36:43,962:INFO:Creating metrics dataframe
2025-10-02 11:36:43,973:INFO:Initializing Dummy Classifier
2025-10-02 11:36:43,973:INFO:Total runtime is 0.2909915328025818 minutes
2025-10-02 11:36:43,977:INFO:SubProcess create_model() called ==================================
2025-10-02 11:36:43,977:INFO:Initializing create_model()
2025-10-02 11:36:43,977:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9CAD77CD0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E9F047F4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-02 11:36:43,977:INFO:Checking exceptions
2025-10-02 11:36:43,977:INFO:Importing libraries
2025-10-02 11:36:43,977:INFO:Copying training dataset
2025-10-02 11:36:43,980:INFO:Defining folds
2025-10-02 11:36:43,980:INFO:Declaring metric variables
2025-10-02 11:36:43,988:INFO:Importing untrained model
2025-10-02 11:36:43,994:INFO:Dummy Classifier Imported successfully
2025-10-02 11:36:44,003:INFO:Starting cross validation
2025-10-02 11:36:44,005:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-10-02 11:36:44,050:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-02 11:36:44,050:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-02 11:36:44,052:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-02 11:36:44,052:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-02 11:36:44,054:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-02 11:36:44,054:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-02 11:36:44,068:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-02 11:36:44,081:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-02 11:36:44,087:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-02 11:36:44,087:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-10-02 11:36:44,110:INFO:Calculating mean and std
2025-10-02 11:36:44,110:INFO:Creating metrics dataframe
2025-10-02 11:36:44,113:INFO:Uploading results into container
2025-10-02 11:36:44,113:INFO:Uploading model into container now
2025-10-02 11:36:44,113:INFO:_master_model_container: 14
2025-10-02 11:36:44,117:INFO:_display_container: 2
2025-10-02 11:36:44,117:INFO:DummyClassifier(constant=None, random_state=7144, strategy='prior')
2025-10-02 11:36:44,117:INFO:create_model() successfully completed......................................
2025-10-02 11:36:44,196:INFO:SubProcess create_model() end ==================================
2025-10-02 11:36:44,196:INFO:Creating metrics dataframe
2025-10-02 11:36:44,212:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-10-02 11:36:44,224:INFO:Initializing create_model()
2025-10-02 11:36:44,224:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9CAD77CD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7144, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-10-02 11:36:44,224:INFO:Checking exceptions
2025-10-02 11:36:44,227:INFO:Importing libraries
2025-10-02 11:36:44,227:INFO:Copying training dataset
2025-10-02 11:36:44,233:INFO:Defining folds
2025-10-02 11:36:44,233:INFO:Declaring metric variables
2025-10-02 11:36:44,233:INFO:Importing untrained model
2025-10-02 11:36:44,233:INFO:Declaring custom model
2025-10-02 11:36:44,235:INFO:Logistic Regression Imported successfully
2025-10-02 11:36:44,235:INFO:Cross validation set to False
2025-10-02 11:36:44,235:INFO:Fitting Model
2025-10-02 11:36:44,745:WARNING:C:\Users\pforg\anaconda3\envs\new_env\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-10-02 11:36:44,746:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7144, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-10-02 11:36:44,746:INFO:create_model() successfully completed......................................
2025-10-02 11:36:44,865:INFO:_master_model_container: 14
2025-10-02 11:36:44,869:INFO:_display_container: 2
2025-10-02 11:36:44,869:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7144, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-10-02 11:36:44,869:INFO:compare_models() successfully completed......................................
2025-10-02 11:38:37,857:INFO:Initializing save_model()
2025-10-02 11:38:37,857:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7144, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=Logistic_Regression, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\pforg\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'AutoPay', 'monthly_to_total',
                                             'tenure_to_total'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-10-02 11:38:37,857:INFO:Adding model into prep_pipe
2025-10-02 11:38:37,862:INFO:Logistic_Regression.pkl saved in current working directory
2025-10-02 11:38:37,870:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'AutoPay', 'monthly_to_total',
                                             'tenure_to_total'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=7144,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-10-02 11:38:37,870:INFO:save_model() successfully completed......................................
2025-10-02 11:38:41,892:INFO:Initializing load_model()
2025-10-02 11:38:41,892:INFO:load_model(model_name=Logistic_Regression, platform=None, authentication=None, verbose=True)
2025-10-02 11:38:41,919:INFO:Initializing predict_model()
2025-10-02 11:38:41,919:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9CAD77CD0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\pforg\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'AutoPay', 'monthly_to_total',
                                             'tenure_to_total'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=7144,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E9CADCC430>)
2025-10-02 11:38:41,919:INFO:Checking exceptions
2025-10-02 11:38:41,919:INFO:Preloading libraries
2025-10-02 11:38:41,924:INFO:Set up data.
2025-10-02 11:38:41,928:INFO:Set up index.
2025-10-02 11:38:48,669:INFO:Initializing load_model()
2025-10-02 11:38:48,669:INFO:load_model(model_name=Logistic_Regression, platform=None, authentication=None, verbose=True)
2025-10-02 11:38:48,684:INFO:Initializing predict_model()
2025-10-02 11:38:48,684:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9CAD77CD0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\pforg\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'AutoPay', 'monthly_to_total',
                                             'tenure_to_total'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=7144,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E9DC6C2B90>)
2025-10-02 11:38:48,684:INFO:Checking exceptions
2025-10-02 11:38:48,684:INFO:Preloading libraries
2025-10-02 11:38:48,687:INFO:Set up data.
2025-10-02 11:38:48,695:INFO:Set up index.
2025-10-02 11:39:34,794:INFO:Initializing load_model()
2025-10-02 11:39:34,795:INFO:load_model(model_name=Logistic_Regression, platform=None, authentication=None, verbose=True)
2025-10-02 11:39:34,801:INFO:Initializing predict_model()
2025-10-02 11:39:34,801:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9CAD77CD0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\pforg\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'AutoPay', 'monthly_to_total',
                                             'tenure_to_total'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=7144,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E9F0353370>)
2025-10-02 11:39:34,801:INFO:Checking exceptions
2025-10-02 11:39:34,801:INFO:Preloading libraries
2025-10-02 11:39:34,805:INFO:Set up data.
2025-10-02 11:39:34,811:INFO:Set up index.
2025-10-02 11:40:53,238:INFO:Initializing load_model()
2025-10-02 11:40:53,239:INFO:load_model(model_name=Logistic_Regression, platform=None, authentication=None, verbose=True)
2025-10-02 11:40:53,252:INFO:Initializing predict_model()
2025-10-02 11:40:53,252:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E9CAD77CD0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\pforg\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['tenure', 'PhoneService',
                                             'Contract', 'PaymentMethod',
                                             'MonthlyCharges', 'TotalCharges',
                                             'AutoPay', 'monthly_to_total',
                                             'tenure_to_total'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=7144,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E9CAD63EB0>)
2025-10-02 11:40:53,252:INFO:Checking exceptions
2025-10-02 11:40:53,252:INFO:Preloading libraries
2025-10-02 11:40:53,255:INFO:Set up data.
2025-10-02 11:40:53,264:INFO:Set up index.
